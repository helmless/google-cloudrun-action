name: Google Cloud Run Action
description: Templates and deploys applications to Google Cloud Run in a single step.
author: 'Michael Reichenbach (Silthus)'
branding:
  icon: 'cloud'
  color: 'blue'

inputs:
  chart:
    description: 'Helm chart to use for templating. Defaults to the Google Cloud Run chart.'
    required: false
    default: 'oci://ghcr.io/helmless/google-cloudrun-service'
  chart_version:
    description: 'Version of the Helm chart to use.'
    required: false
    default: 'latest'
  files:
    description: 'Glob patterns of value files to include when templating the chart.'
    required: false
    default: 'values.yaml'
  template_only:
    description: 'If true, only template the chart without deploying. Will also skip dry_run validation.'
    required: false
    default: 'false'
  dry_run:
    description: 'If true, only validate the configuration without deploying.'
    required: false
    default: 'false'

outputs:
  manifests_deployed:
    description: 'The number of manifests that were deployed.'
    value: ${{ steps.deploy.outputs.manifests_deployed }}
  workloads:
    description: 'JSON array of all deployed Cloud Run workloads with their details (name, type, region, project).'
    value: ${{ steps.deploy.outputs.workloads }}
  
runs:
  using: composite
  steps:
    - name: üìù Template Cloud Run Manifest
      id: template
      uses: helmless/template-action@v0
      with:
        chart: ${{ inputs.chart }}
        chart_version: ${{ inputs.chart_version }}
        files: ${{ inputs.files }}

    - name: üìÑ Copy Deploy Action
      shell: bash
      if: ${{ inputs.template_only }} == 'false'
      run: |
        if [[ "$(pwd)" == *google-cloudrun-action* ]]; then
          echo "Running inside of helmless/google-cloudrun-action, no need to copy action."
          exit 0
        fi
        cp -r $GITHUB_ACTION_PATH/deploy ./deploy
    
    - name: üöÄ Deploy to Cloud Run
      id: deploy
      uses: ./deploy
      if: ${{ inputs.template_only }} == 'false'
      with:
        path: ${{ steps.template.outputs.output_dir }}
        dry_run: ${{ inputs.dry_run }}
