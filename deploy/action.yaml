name: Google Cloud Run Deploy
description: Deploys a rendered Helmless manifest to Google Cloud Run. Can deploy either a single manifest or a directory of manifests.
author: 'Michael Reichenbach (Silthus)'
branding:
  icon: 'cloud'
  color: 'blue'

inputs:
  path:
    description: 'The path to the manifest file or directory containing manifest files.'
    required: false
    default: 'helmless_manifest.yaml'
  dry_run:
    description: 'If true, only validate the configuration without deploying.'
    required: false
    default: 'false'
outputs:
  manifests_deployed:
    description: 'The number of manifests that were deployed.'
    value: ${{ steps.deploy.outputs.deployed_count }}
  workloads:
    description: 'JSON array of all deployed Cloud Run workloads with their details (name, type, region, project).'
    value: ${{ steps.deploy.outputs.workloads }}

runs:
  using: composite
  steps:
    - name: üì¶ Setup Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      
    - name: üöÄ Deploy to Cloud Run
      id: deploy
      shell: bash
      run: |
        INPUT_PATH="${{ inputs.path }}"
        DRY_RUN="${{ inputs.dry_run }}"
        SCRIPTS_DIR="$GITHUB_ACTION_PATH/scripts"
        
        echo "üîç Finding Cloud Run manifests..."
        MANIFESTS=$("$SCRIPTS_DIR/find-manifests.sh" "$INPUT_PATH")
        
        # Check if we found any manifests
        if [ -z "$MANIFESTS" ]; then
          echo "‚ùå No manifests found to deploy!"
          exit 1
        fi
        
        # Count how many manifests we found
        MANIFEST_COUNT=$(echo "$MANIFESTS" | wc -l)
        echo "üìä Found $MANIFEST_COUNT manifest(s) to deploy"
        
        # Deploy each manifest and collect results
        DEPLOY_RESULTS=()
        for manifest in $MANIFESTS; do
          MANIFEST_NAME=$(basename "$manifest")
          echo "üöÄ Deploying manifest: $MANIFEST_NAME"
          
          # Deploy the manifest and capture the JSON result
          result=$("$SCRIPTS_DIR/deploy-manifest.sh" "$manifest" "$DRY_RUN")
          exit_code=$?
          
          if [ $exit_code -eq 0 ]; then
            echo "‚úÖ Successfully deployed manifest"
            echo "$result" >> deploy_results.json
          else
            echo "‚ùå Failed to deploy manifest"
            exit 1
          fi
        done
        
        # Process the results
        if [ -f deploy_results.json ]; then
          RESULTS=$(cat deploy_results.json | "$SCRIPTS_DIR/process-results.sh")
          echo "$RESULTS" >> $GITHUB_OUTPUT
          echo "üéâ Deployment complete!"
        else
          echo "workloads=[]" >> $GITHUB_OUTPUT
          echo "deployed_count=0" >> $GITHUB_OUTPUT
          echo "‚ö†Ô∏è No deployments were processed"
        fi 